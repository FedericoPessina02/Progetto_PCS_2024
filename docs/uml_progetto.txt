@startuml

package Internals{

struct Fracture {
	+ id: unsigned int
	+ num_vertices: unsigned int
	+ vertices: MatrixXd
	+ passing_traces: vector<unsigned int>
	+ internal_traces: vector <unsigned int>
	+ plane_normal: Vector3d
	+ radius: double
	+ plane_d: double
	+ barycenter: Vector3d
	+ void Fracture(id, num_vertices, vertices)
	+ void generateTrace(other: Fracture, mesh: TracesMesh)
	+ void cutMeshBySegment(mesh: PolygonalMesh, a: Vector3d, b: Vector3d, cached_coeffs: const map<unsigned int, Vector2d>)
	+ PolygonalMesh generatePolygonalMesh()
}

struct TracesMesh {
  + traces_id: vector<unsigned int>
	+ traces_vertices: vector<array<double, 6>>
	+ traces_fracture: vector<array<unsigned int,2>>
	+ traces_length: vector<double>
	+ void TracesMesh()
	+ void addTrace(id: unsigned_int, vertices: array<Vector3d,2>, fractures: array<unsigned int,2>)
}

struct PolygonalMesh {
  + FractureId: unsigned int
  + IdCell0Ds: vector<unsigned int>
  + CoordinateCell0Ds: vector<Vector3d>
  + IdCell1Ds: vector<unsigned int>
  + VerticesCell1Ds: vector<array<unsigned int, 2>>
  + IdCell2Ds: vector<unsigned int>
  + VerticesCell2Ds: vector<vector<unsigned int>>
  + EdgesCell2Ds: vector<vector<unsigned int>>
  + normal : Vector3d
  + void PolygonalMesh()
  + unsigned_int addPoint(point: Vector3d)
  + unsigned_int addEdge(a: unsigned_int, b: unsigned_int)
}

struct Global {
	+ fractures: vector<Fracture>
	+ id_to_fractures: map<int, vector<Fracture>>
	+ cut_fractures: vector<PolygonalMesh>
	+ traces: TracesMesh
}

package Algorithms <<Rectangle>> {
  protocol assignPartition {
  }
  protocol cutTraces {
  }
  protocol cutTracesInsidePartition {
  }
  protocol cutTracesOverlapping {
  }
  protocol cutPolygonalMeshMultithread {
  }
  protocol ordinaFract {
  }
}

package Utils <<Rectangle>> {
  protocol FractureInput {
  }
  protocol Stampa1 {
  }
  protocol ExportSTL {
    Esporta le mesh ritagliate in formato .STL
  }
  protocol MergeSort {
  }
  protocol BubbleSort {
  }
  protocol IntroSort {
  }
}

ordinaFract --> IntroSort
ordinaFract --> MergeSort
ordinaFract --> BubbleSort
cutTraces --> cutTracesInsidePartition
cutTraces --> cutTracesOverlapping
cutPolygonalMeshMultithread --> Fracture

}

package Externals {

package Eigen <<Rectangle>> {
}
package GoogleTest <<Rectangle>> {
}
package Paraview <<Rectangle>> {
}

}

@enduml
